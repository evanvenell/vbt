@model BugTrackerApplication.Models.Comment

@{
    ViewBag.Title = "Create";
}

<div class="content">
    <div class="container-fluid">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h1>Add a new Comment</h1>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.TicketID, "TicketID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <!--Html.DropDownList("TicketID", null, htmlAttributes: new { class = "form-control" })-->
                        <!--Html.ActionLink("Number", "Index", new { sortOrder = ViewBag.IDSortParm })-->
                        <!--Html.ActionLink("TicketID", "Details", new { ticketID = ViewBag.AddComment })-->
                        @*@Html.TextBox("TicketID")*@
                        @Html.Editor("TicketID", new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        <!--Html.ViewBag("TicketID", new { TicketID = ViewBag.AddComment })-->
                        <!--Html.ViewBag.AddComment-->
                        @Html.ValidationMessageFor(model => model.TicketID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CommentTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CommentTitle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CommentTitle, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.Commenter, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Commenter, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Commenter, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
</div>
</div>
        @*<div>
                @Html.ActionLink("Back to List", "Index")
            </div>*@

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
